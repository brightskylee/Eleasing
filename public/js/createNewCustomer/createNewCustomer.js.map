{"version":3,"sources":["createNewCustomer.js"],"names":[],"mappingsfile":"createNewCustomer.js","sourcesContent":["//Form-specific elements\nvar startFormSelector = \"#start-form\";\nvar formErrorsDivSelector = \".form-errors\";\n//Inquiry-specific elements\nvar inquirySelectionSelector = \"#inquiry-selection\";\nvar inquiryHeadingSelector = \"#inquiry-heading\";\n//Leasing-specific elements\nvar leasingSelectionSelector = \"#leasing-selection\";\nvar leasingHeadingSelector = \"#leasing-heading\";\n\n$(window).bind(\"pageshow\", function() {\n    //Determines type of customer contact selected\n    var customerContactSelected = $('input[name=customerContact]:checked', startFormSelector).val();\n    determineContactSelectedInput(customerContactSelected);\n});\n\n$(document).ready(function() {\n    $('input').on('change', function() {\n        //Empty any form errors that have already been displayed\n        clearFormErrors();\n    });\n\n    //On change handler for a contact type selection\n    $('#contact-selection input').on('change', function() {\n        //Determines type of customer contact selected\n        var customerContactSelected = $('input[name=customerContact]:checked', startFormSelector).val();\n        determineContactSelectedInput(customerContactSelected);\n    });\n\n    //When start form is submit, check for required inputs\n    $('#start-form').submit(function() {\n        //Empty any form errors that have already been displayed\n        clearFormErrors();\n\n        //Determine the type of contact selected to ensure required inputs provided properly\n        var customerContactSelected = $('input[name=customerContact]:checked', startFormSelector).val();\n\n        //If no customer contact has been selected, display error\n        if(!customerContactSelected) {\n            displayFormError(\"You must select how the customer made contact.\");\n            return false;\n        }\n\n        switch(customerContactSelected) {\n            case 'email':\n            case 'phone':\n            case 'specialEvent':\n                hideLeasingInput();\n                var inquiryCustomerSelection = $('input[name=inquiryCustomer]:checked', startFormSelector).val();\n                //If inquiry customer hasn't been selected, display error\n                if(!inquiryCustomerSelection) {\n                    displayFormError(\"You must select if the customer is an inquiry.\");\n                    return false;\n                }\n                //If all required information has been provided, allow form to submit\n                return true;\n                break;\n            case 'walkIn':\n                //Deselect and hide inquiry form if shown\n                hideInquiryInput();\n                var appointmentCustomerSelection = $('input[name=leasingCustomerAppointment]:checked', startFormSelector).val();\n                if(!appointmentCustomerSelection) {\n                    displayFormError(\"You must select if the customer has an appointment\");\n                    return false;\n                }\n                //All required input has been provided properly\n                return true;\n                break;\n            default:\n                return false;\n                break;\n        }\n    });\n});\n\nfunction determineContactSelectedInput(customerContactSelected) {\n    //Based on the contact event selected, display the appropriate inputs\n    switch(customerContactSelected) {\n        case 'email':\n        case 'phone':\n        case 'specialEvent':\n            //Show inquiry-specific inputs\n            showInquiryInput();\n            //Deselect and hide leasing form if shown\n            hideLeasingInput();\n            break;\n        case 'walkIn':\n            //Show leasing-specific inputs\n            showLeasingInput();\n            //Deselect and hide inquiry form if shown\n            hideInquiryInput();\n            break;\n    }\n}\n\nfunction clearRadioButtonSelectedGroup(radioButtonGroupName) {\n    $('input:radio[name=' + radioButtonGroupName + ']').each(function () {\n        $(this).prop('checked', false);\n    });\n}\n\nfunction showLeasingInput() {\n    $(leasingHeadingSelector).show();\n    $(leasingSelectionSelector).show();\n}\n\nfunction hideLeasingInput() {\n    clearRadioButtonSelectedGroup('leasingCustomerAppointment');\n    $(leasingSelectionSelector).hide();\n    $(leasingHeadingSelector).hide();\n}\n\nfunction showInquiryInput() {\n    $(inquiryHeadingSelector).show();\n    $(inquirySelectionSelector).show();\n}\n\nfunction hideInquiryInput() {\n    clearRadioButtonSelectedGroup('inquiryCustomer');\n    $(inquirySelectionSelector).hide();\n    $(inquiryHeadingSelector).hide();\n}\n\nfunction displayFormError(text) {\n    $(formErrorsDivSelector).append($(\"<p/>\", {\"class\": \"form-error\", \"text\": text}));\n}\n\nfunction clearFormErrors() {\n    $(formErrorsDivSelector).empty();\n}"]}